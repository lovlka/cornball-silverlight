//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Cornball.Statistics {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataItem", Namespace="http://lantisen.stodell.se/")]
    public partial class DataItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameField;
        
        private int ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://lantisen.stodell.se/", ConfigurationName="Statistics.Statistics")]
    public interface Statistics {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://lantisen.stodell.se/Statistics/IncreaseValue", ReplyAction="http://lantisen.stodell.se/Statistics/IncreaseValueResponse")]
        System.IAsyncResult BeginIncreaseValue(string name, System.AsyncCallback callback, object asyncState);
        
        void EndIncreaseValue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://lantisen.stodell.se/Statistics/GetStatistics", ReplyAction="http://lantisen.stodell.se/Statistics/GetStatisticsResponse")]
        System.IAsyncResult BeginGetStatistics(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Cornball.Statistics.DataItem> EndGetStatistics(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://lantisen.stodell.se/Statistics/SaveHighscore", ReplyAction="http://lantisen.stodell.se/Statistics/SaveHighscoreResponse")]
        System.IAsyncResult BeginSaveHighscore(string name, int score, System.AsyncCallback callback, object asyncState);
        
        void EndSaveHighscore(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://lantisen.stodell.se/Statistics/GetHighscores", ReplyAction="http://lantisen.stodell.se/Statistics/GetHighscoresResponse")]
        System.IAsyncResult BeginGetHighscores(int limit, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Cornball.Statistics.DataItem> EndGetHighscores(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://lantisen.stodell.se/Statistics/IsHighscore", ReplyAction="http://lantisen.stodell.se/Statistics/IsHighscoreResponse")]
        System.IAsyncResult BeginIsHighscore(int score, int limit, int days, System.AsyncCallback callback, object asyncState);
        
        bool EndIsHighscore(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface StatisticsChannel : Cornball.Statistics.Statistics, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Cornball.Statistics.DataItem> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Cornball.Statistics.DataItem>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHighscoresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHighscoresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Cornball.Statistics.DataItem> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Cornball.Statistics.DataItem>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsHighscoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsHighscoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StatisticsClient : System.ServiceModel.ClientBase<Cornball.Statistics.Statistics>, Cornball.Statistics.Statistics {
        
        private BeginOperationDelegate onBeginIncreaseValueDelegate;
        
        private EndOperationDelegate onEndIncreaseValueDelegate;
        
        private System.Threading.SendOrPostCallback onIncreaseValueCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStatisticsDelegate;
        
        private EndOperationDelegate onEndGetStatisticsDelegate;
        
        private System.Threading.SendOrPostCallback onGetStatisticsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveHighscoreDelegate;
        
        private EndOperationDelegate onEndSaveHighscoreDelegate;
        
        private System.Threading.SendOrPostCallback onSaveHighscoreCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHighscoresDelegate;
        
        private EndOperationDelegate onEndGetHighscoresDelegate;
        
        private System.Threading.SendOrPostCallback onGetHighscoresCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsHighscoreDelegate;
        
        private EndOperationDelegate onEndIsHighscoreDelegate;
        
        private System.Threading.SendOrPostCallback onIsHighscoreCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public StatisticsClient() {
        }
        
        public StatisticsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StatisticsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatisticsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatisticsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> IncreaseValueCompleted;
        
        public event System.EventHandler<GetStatisticsCompletedEventArgs> GetStatisticsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveHighscoreCompleted;
        
        public event System.EventHandler<GetHighscoresCompletedEventArgs> GetHighscoresCompleted;
        
        public event System.EventHandler<IsHighscoreCompletedEventArgs> IsHighscoreCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cornball.Statistics.Statistics.BeginIncreaseValue(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIncreaseValue(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Cornball.Statistics.Statistics.EndIncreaseValue(System.IAsyncResult result) {
            base.Channel.EndIncreaseValue(result);
        }
        
        private System.IAsyncResult OnBeginIncreaseValue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return ((Cornball.Statistics.Statistics)(this)).BeginIncreaseValue(name, callback, asyncState);
        }
        
        private object[] OnEndIncreaseValue(System.IAsyncResult result) {
            ((Cornball.Statistics.Statistics)(this)).EndIncreaseValue(result);
            return null;
        }
        
        private void OnIncreaseValueCompleted(object state) {
            if ((this.IncreaseValueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IncreaseValueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IncreaseValueAsync(string name) {
            this.IncreaseValueAsync(name, null);
        }
        
        public void IncreaseValueAsync(string name, object userState) {
            if ((this.onBeginIncreaseValueDelegate == null)) {
                this.onBeginIncreaseValueDelegate = new BeginOperationDelegate(this.OnBeginIncreaseValue);
            }
            if ((this.onEndIncreaseValueDelegate == null)) {
                this.onEndIncreaseValueDelegate = new EndOperationDelegate(this.OnEndIncreaseValue);
            }
            if ((this.onIncreaseValueCompletedDelegate == null)) {
                this.onIncreaseValueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIncreaseValueCompleted);
            }
            base.InvokeAsync(this.onBeginIncreaseValueDelegate, new object[] {
                        name}, this.onEndIncreaseValueDelegate, this.onIncreaseValueCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cornball.Statistics.Statistics.BeginGetStatistics(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStatistics(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Cornball.Statistics.DataItem> Cornball.Statistics.Statistics.EndGetStatistics(System.IAsyncResult result) {
            return base.Channel.EndGetStatistics(result);
        }
        
        private System.IAsyncResult OnBeginGetStatistics(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Cornball.Statistics.Statistics)(this)).BeginGetStatistics(callback, asyncState);
        }
        
        private object[] OnEndGetStatistics(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Cornball.Statistics.DataItem> retVal = ((Cornball.Statistics.Statistics)(this)).EndGetStatistics(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStatisticsCompleted(object state) {
            if ((this.GetStatisticsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStatisticsCompleted(this, new GetStatisticsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStatisticsAsync() {
            this.GetStatisticsAsync(null);
        }
        
        public void GetStatisticsAsync(object userState) {
            if ((this.onBeginGetStatisticsDelegate == null)) {
                this.onBeginGetStatisticsDelegate = new BeginOperationDelegate(this.OnBeginGetStatistics);
            }
            if ((this.onEndGetStatisticsDelegate == null)) {
                this.onEndGetStatisticsDelegate = new EndOperationDelegate(this.OnEndGetStatistics);
            }
            if ((this.onGetStatisticsCompletedDelegate == null)) {
                this.onGetStatisticsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStatisticsCompleted);
            }
            base.InvokeAsync(this.onBeginGetStatisticsDelegate, null, this.onEndGetStatisticsDelegate, this.onGetStatisticsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cornball.Statistics.Statistics.BeginSaveHighscore(string name, int score, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveHighscore(name, score, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Cornball.Statistics.Statistics.EndSaveHighscore(System.IAsyncResult result) {
            base.Channel.EndSaveHighscore(result);
        }
        
        private System.IAsyncResult OnBeginSaveHighscore(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            int score = ((int)(inValues[1]));
            return ((Cornball.Statistics.Statistics)(this)).BeginSaveHighscore(name, score, callback, asyncState);
        }
        
        private object[] OnEndSaveHighscore(System.IAsyncResult result) {
            ((Cornball.Statistics.Statistics)(this)).EndSaveHighscore(result);
            return null;
        }
        
        private void OnSaveHighscoreCompleted(object state) {
            if ((this.SaveHighscoreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveHighscoreCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveHighscoreAsync(string name, int score) {
            this.SaveHighscoreAsync(name, score, null);
        }
        
        public void SaveHighscoreAsync(string name, int score, object userState) {
            if ((this.onBeginSaveHighscoreDelegate == null)) {
                this.onBeginSaveHighscoreDelegate = new BeginOperationDelegate(this.OnBeginSaveHighscore);
            }
            if ((this.onEndSaveHighscoreDelegate == null)) {
                this.onEndSaveHighscoreDelegate = new EndOperationDelegate(this.OnEndSaveHighscore);
            }
            if ((this.onSaveHighscoreCompletedDelegate == null)) {
                this.onSaveHighscoreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveHighscoreCompleted);
            }
            base.InvokeAsync(this.onBeginSaveHighscoreDelegate, new object[] {
                        name,
                        score}, this.onEndSaveHighscoreDelegate, this.onSaveHighscoreCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cornball.Statistics.Statistics.BeginGetHighscores(int limit, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHighscores(limit, startDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Cornball.Statistics.DataItem> Cornball.Statistics.Statistics.EndGetHighscores(System.IAsyncResult result) {
            return base.Channel.EndGetHighscores(result);
        }
        
        private System.IAsyncResult OnBeginGetHighscores(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int limit = ((int)(inValues[0]));
            System.Nullable<System.DateTime> startDate = ((System.Nullable<System.DateTime>)(inValues[1]));
            System.Nullable<System.DateTime> endDate = ((System.Nullable<System.DateTime>)(inValues[2]));
            return ((Cornball.Statistics.Statistics)(this)).BeginGetHighscores(limit, startDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetHighscores(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Cornball.Statistics.DataItem> retVal = ((Cornball.Statistics.Statistics)(this)).EndGetHighscores(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHighscoresCompleted(object state) {
            if ((this.GetHighscoresCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHighscoresCompleted(this, new GetHighscoresCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHighscoresAsync(int limit, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            this.GetHighscoresAsync(limit, startDate, endDate, null);
        }
        
        public void GetHighscoresAsync(int limit, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, object userState) {
            if ((this.onBeginGetHighscoresDelegate == null)) {
                this.onBeginGetHighscoresDelegate = new BeginOperationDelegate(this.OnBeginGetHighscores);
            }
            if ((this.onEndGetHighscoresDelegate == null)) {
                this.onEndGetHighscoresDelegate = new EndOperationDelegate(this.OnEndGetHighscores);
            }
            if ((this.onGetHighscoresCompletedDelegate == null)) {
                this.onGetHighscoresCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHighscoresCompleted);
            }
            base.InvokeAsync(this.onBeginGetHighscoresDelegate, new object[] {
                        limit,
                        startDate,
                        endDate}, this.onEndGetHighscoresDelegate, this.onGetHighscoresCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Cornball.Statistics.Statistics.BeginIsHighscore(int score, int limit, int days, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsHighscore(score, limit, days, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Cornball.Statistics.Statistics.EndIsHighscore(System.IAsyncResult result) {
            return base.Channel.EndIsHighscore(result);
        }
        
        private System.IAsyncResult OnBeginIsHighscore(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int score = ((int)(inValues[0]));
            int limit = ((int)(inValues[1]));
            int days = ((int)(inValues[2]));
            return ((Cornball.Statistics.Statistics)(this)).BeginIsHighscore(score, limit, days, callback, asyncState);
        }
        
        private object[] OnEndIsHighscore(System.IAsyncResult result) {
            bool retVal = ((Cornball.Statistics.Statistics)(this)).EndIsHighscore(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsHighscoreCompleted(object state) {
            if ((this.IsHighscoreCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsHighscoreCompleted(this, new IsHighscoreCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsHighscoreAsync(int score, int limit, int days) {
            this.IsHighscoreAsync(score, limit, days, null);
        }
        
        public void IsHighscoreAsync(int score, int limit, int days, object userState) {
            if ((this.onBeginIsHighscoreDelegate == null)) {
                this.onBeginIsHighscoreDelegate = new BeginOperationDelegate(this.OnBeginIsHighscore);
            }
            if ((this.onEndIsHighscoreDelegate == null)) {
                this.onEndIsHighscoreDelegate = new EndOperationDelegate(this.OnEndIsHighscore);
            }
            if ((this.onIsHighscoreCompletedDelegate == null)) {
                this.onIsHighscoreCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsHighscoreCompleted);
            }
            base.InvokeAsync(this.onBeginIsHighscoreDelegate, new object[] {
                        score,
                        limit,
                        days}, this.onEndIsHighscoreDelegate, this.onIsHighscoreCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Cornball.Statistics.Statistics CreateChannel() {
            return new StatisticsClientChannel(this);
        }
        
        private class StatisticsClientChannel : ChannelBase<Cornball.Statistics.Statistics>, Cornball.Statistics.Statistics {
            
            public StatisticsClientChannel(System.ServiceModel.ClientBase<Cornball.Statistics.Statistics> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginIncreaseValue(string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("IncreaseValue", _args, callback, asyncState);
                return _result;
            }
            
            public void EndIncreaseValue(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("IncreaseValue", _args, result);
            }
            
            public System.IAsyncResult BeginGetStatistics(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetStatistics", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Cornball.Statistics.DataItem> EndGetStatistics(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Cornball.Statistics.DataItem> _result = ((System.Collections.ObjectModel.ObservableCollection<Cornball.Statistics.DataItem>)(base.EndInvoke("GetStatistics", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveHighscore(string name, int score, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = name;
                _args[1] = score;
                System.IAsyncResult _result = base.BeginInvoke("SaveHighscore", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveHighscore(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveHighscore", _args, result);
            }
            
            public System.IAsyncResult BeginGetHighscores(int limit, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = limit;
                _args[1] = startDate;
                _args[2] = endDate;
                System.IAsyncResult _result = base.BeginInvoke("GetHighscores", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Cornball.Statistics.DataItem> EndGetHighscores(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Cornball.Statistics.DataItem> _result = ((System.Collections.ObjectModel.ObservableCollection<Cornball.Statistics.DataItem>)(base.EndInvoke("GetHighscores", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginIsHighscore(int score, int limit, int days, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = score;
                _args[1] = limit;
                _args[2] = days;
                System.IAsyncResult _result = base.BeginInvoke("IsHighscore", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndIsHighscore(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("IsHighscore", _args, result)));
                return _result;
            }
        }
    }
}
